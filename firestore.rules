rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can only read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // Allow reading other users for friend discovery
    }
    
    // Users collection - contacts sub-collection
    match /users/{userId}/contacts/{contactId} {
      // The owner of the user document can manage their contacts list
      // Read: Only the owner can read their contacts list
      // Write/Delete: Only the owner can create or remove contacts
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Snaps collection - readable by sender and recipient only
    match /snaps/{snapId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
      allow write: if request.auth != null && request.auth.uid == request.resource.data.senderId;
      allow delete: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
    }
    
    // Stories collection
    // Anyone authenticated can read.
    // The story owner can create/delete.
    // Any authenticated user can update *only* the viewedBy array to include their UID.
    match /stories/{storyId} {
      allow read: if request.auth != null;

      // Create (write) — only the owner of the story (userId) may create documents
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

      // Delete — only the owner may delete their own story
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;

      // Update — allow two cases:
      //  1) Owner updating any fields
      //  2) Any authenticated user adding themselves to viewedBy using arrayUnion and NOT modifying other fields
      allow update: if request.auth != null && (
        // Owner can always update
        request.auth.uid == resource.data.userId ||

        // Non-owner: only allowed if the diff is exactly adding their UID to viewedBy
        (
          request.resource.data.userId == resource.data.userId &&
          request.resource.data.imageUrl == resource.data.imageUrl &&
          request.resource.data.imagePath == resource.data.imagePath &&
          request.resource.data.timestamp == resource.data.timestamp &&
          request.resource.data.expiresAt == resource.data.expiresAt &&
          request.resource.data.metadata == resource.data.metadata &&
          // viewedBy length increases by 1 and contains auth.uid
          request.resource.data.viewedBy.size() == resource.data.viewedBy.size() + 1 &&
          request.auth.uid in request.resource.data.viewedBy
        )
      );
    }
    
    // Chat metadata collection (for chat list)
    match /chats/{chatId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }
  }
}
